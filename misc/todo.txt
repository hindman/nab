--------
File discovery and text encodings
--------

discover(): implement and document:

    - Adjust the implementation:
        - Switch from the current tuple-focus to a kwarg-focus.
        - Take open() kwargs rather than just a mode string.
        - Allow discover() methods to collaborate: take data; return data.

    - Expected from a discover() call:
        - Nothing: use paths from CLI and default out/err streams.
        - Iterable of FileSet dicts (keys: inp, out, err).
        - Each val for those keys should be a FileHandle dict.
        - FileHandle keys: path, handle, all open() args.

    - Implement basic discover steps:
        - Open.
        - Walk.
        - Glob.

    - open() functions:
        - PY2: open(name, mode, buffering) [positional only].
        - PY3: open(file, mode, buffering, encoding, errors, newline, closefd, opener).

Unicode handling:

    - Default:
        - Support the `--encoding IN OUT` option (default: utf-8 for both).
        - Read input line: if it is bytes, decode it using --encoding IN.
        - Step.out() and Step.err(): if not bytes, encode it using --encoding OUT.

    - Implement steps.
        - Encode.
        - Decode.

    - Default behavior when calling next(FH):
        - Py2 | stdin/file | binary_type
        - Py3 | stdin/file | text_type

--------
Step work
--------

Add Step.context [see notes].

Testing: setup; write a few basic tests of various types; better way to capture outputs.

Steps: rename existing steps to align with latest plan.

Steps 1 [see notes]

--------
Key enhancements
--------

Support leading-dot syntax and --step-mode option [see notes].

Better help [see notes].

Testing: widen coverage.

Steps 2 - 6 [see notes]

--------
Later
--------

Steps 7 - 8 [see notes]

Support paths via several mechanisms [see notes].

Testing: full coverage.

Add NabRgx helper class to simply regex usages [see notes].

step_has_phase(): confirm that this is robust (eg inheritance).

Support BFS processing [see notes].

Support parallel file processing [see notes].

Allow user to control input record separator (default = newline).

Support .nabrc file [see notes].

DataDict() helper class for positional data processing [see notes].

Dryrun support [see notes].

